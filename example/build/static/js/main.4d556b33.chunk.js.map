{"version":3,"sources":["App.js","index.js"],"names":["networkConnector","NetworkConnector","urls","1","process","defaultChainId","dcentConnector","DcentConnector","chainId","url","getLibrary","provider","console","log","Web3Provider","SignMessage","address","useState","signMessage","setSignMessage","signResult","setSignResult","useWeb3React","library","connector","style","marginTop","onChange","e","target","value","onClick","_providers","signPersonalMessage","data","from","then","SignTransaction","defaultTxData","to","gas","gasPrice","nonce","JSON","stringify","txData","setTxData","txResult","setTxResult","useEffect","txDataObj","parse","marginBottom","marginLeft","marginRight","signTransaction","App","undefined","blockNumber","setBlockNumber","activate","deactivate","active","account","getBlockNumber","bn","on","removeListener","className","error","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.4d556b33.chunk.js","sourcesContent":["import \"./styles.css\";\nimport { useState, useEffect } from \"react\";\nimport { Web3ReactProvider, useWeb3React } from \"@web3-react/core\";\nimport { NetworkConnector } from \"@web3-react/network-connector\";\nimport { DcentConnector } from \"dcent-connector\"\nimport { Web3Provider } from \"@ethersproject/providers\";\n\nimport 'dotenv/config'\n\nconst networkConnector = new NetworkConnector({\n  urls: {\n    1: process.env.REACT_APP_RPC_URL_1,\n  },\n  defaultChainId: 1\n});\nconst dcentConnector = new DcentConnector({\n  chainId: 1,\n  url: process.env.REACT_APP_RPC_URL_1,\n})\n\nexport default function () {\n  const getLibrary = (provider) => {\n    console.log(\"[getLibrary] provider\", provider);\n    return new Web3Provider(provider);\n  };\n\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <App />\n    </Web3ReactProvider>\n  );\n}\n\nfunction SignMessage ({ address }) {\n  const [signMessage, setSignMessage] = useState('')\n  const [signResult, setSignResult] = useState('')\n  const { library, connector } = useWeb3React();\n\n  const onChangeSignMessage = (e) => {\n    setSignMessage(e.target.value)\n  }\n  const onClickSign = () => {\n    console.log('[onClickSign] signMessage', signMessage)\n    /** @type {import('../../src/provider/DcentSubProvider').default} */\n    const subProvider = library.provider._providers[0]\n    subProvider.signPersonalMessage({\n      data: signMessage,\n      from: address,\n    }).then(setSignResult)\n  }\n  const onClickClear = () => {\n    setSignMessage('')\n    setSignResult('')\n  }\n\n  return (\n    <>\n      {\n        (connector === dcentConnector) &&\n        <div style={{\n          marginTop: '20px',\n        }}>\n          signMessage: \n          <input onChange={onChangeSignMessage} value={signMessage}/>\n          <button onClick={onClickSign}>SignMessage</button>\n          <button onClick={onClickClear}>clear</button>\n          <br />\n          signResult: {signResult}\n        </div>\n      }\n    </>\n  )\n}\n\nfunction SignTransaction({address}) {\n  const { library, connector } = useWeb3React();\n  const defaultTxData = {\n    from: '',\n    to: '',\n    gas: '21000',\n    gasPrice: '0',\n    nonce: '0',\n    value: '0',\n    data: '0x'\n  }\n  const [txData, setTxData] = useState(JSON.stringify(defaultTxData, null, 2))\n  const [txResult, setTxResult] = useState('')\n\n  useEffect(() => {\n    const txDataObj = JSON.parse(txData)\n    txDataObj.from = address\n    txDataObj.to = address\n    setTxData(JSON.stringify(txDataObj, null, 2))\n  }, [address])\n\n  const onClickSignTransaction = () => {\n    /** @type {import('../../src/provider/DcentSubProvider').default} */\n    const subProvider = library.provider._providers[0]\n    subProvider.signTransaction(JSON.parse(txData)).then(setTxResult)\n  }\n\n  const onClickClear = () => {\n    setTxResult('')\n    setTxData(JSON.stringify(defaultTxData, null, 2))\n  }\n\n  const onChangeTxData = (e) => {\n    setTxData(e.target.value)\n  }\n\n  return (\n    <>\n      {\n        (connector === dcentConnector) &&\n        <div style={{\n          marginTop: '20px',\n          marginBottom: '20px',\n        }}>\n          <textarea onChange={onChangeTxData} value={txData} style={{\n            marginLeft: 'auto',\n            marginRight: 'auto',\n          }}/><br />\n          <button onClick={onClickSignTransaction}>SignTransaction</button>\n          <button onClick={onClickClear}>clear</button>\n          <br />\n          Transaction Result: {txResult}\n        </div>\n      }\n    </>\n  )\n}\n\nfunction App() {\n  const [blockNumber, setBlockNumber] = useState(undefined);\n  const { connector, library, activate, deactivate, active, account } = useWeb3React();\n\n  useEffect(() => {\n    console.log('[UseEffect] library', library);\n    if (library) {\n      library.getBlockNumber().then((bn) => {\n        setBlockNumber(bn);\n      });\n      library.on(\"block\", setBlockNumber);\n      return () => {\n        library.removeListener(\"block\", setBlockNumber);\n        setBlockNumber(undefined);\n      };\n    }\n  }, [library]);\n  const onClickNetworkActivate = () => {\n    activate(networkConnector);\n  };\n  const onClickDcentActivate = () => {\n    activate(dcentConnector, (error) => {\n      console.error(error)\n    })\n  }\n  const onClickDeactivate = () => {\n    deactivate(connector);\n  };\n\n  return (\n    <div className=\"App\">\n      <b>Current Block Number: </b>\n      {blockNumber}\n      <br />\n      <b>Current Account: </b>\n      {account}\n      <br />\n      <SignMessage address={account} />\n      <SignTransaction address={account} />\n      <button onClick={onClickNetworkActivate}>network activate</button>\n      <button onClick={onClickDcentActivate}>dcent activate</button>\n      {active && <button onClick={onClickDeactivate}>deactivate</button>}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}